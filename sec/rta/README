
Runtime Assembler's purpose is to provide an easy and flexible runtime method for writing CAAM descriptors.

1. What's supported
==================
1.1 Initialization/verification code for descriptor buffer.
1.2 Configuration/verification code for CAAM commands:
       FIFOLOAD and SEQFIFOLOAD;
       FIFOSTORE and SEQFIFOSTORE;
       SHARED HEADER and JOB HEADER;
       JUMP;
       KEY;
       LOAD and SEQLOAD;
       MATH;
       MOVE and MOVELEN;
       NFIFO - pseudo command( shortcut for writing FIFO entries using LOAD command);
       PKA OPERATION and ALGORITHM OPERATION;
       PROTOCOL;
       SEQ IN PTR and SEQ OUT PTR;
       SIGNATURE;
       STORE and SEQSTORE.
1.3 Support for referential code:
        patching routines for LOAD, MOVE, JUMP and HEADER commands.
1.4 Support for 32bits/36bits pointer size.

2. What's not supported
======================
2.1 Era verification for CAAM commands.

3. Integration
=============
To integrate this tool into your project, rta.h file must be included.

4. Run
======
To run an example, enter tests/directory and use "gcc -Wall -I .. <example_file.c>" to compile.
